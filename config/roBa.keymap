#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <1>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E         &kp R             &kp T                                           &kp Y            &kp U  &lt 5 I    &kp O    &kp P
&kp A           &kp S      &kp D         &kp F             &kp G        &kp TAB              &kp QUESTION  &kp H            &kp J  &kp K      &kp L    &kp SPACE
&kp Z           &kp X      &kp C         &kp V             &lt 6 B      &mt F7 CAPSLOCK      &kp SLASH     &kp N            &kp M  &kp COMMA  &kp DOT  &kp RIGHT_COMMAND
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 3 SPACE  &lt 1 SPACE          &kp ENTER     &lt 4 BACKSPACE                             &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &kp DOLLAR         &kp PERCENT                            &kp PLUS        &kp PIPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp CARET        &kp AMPERSAND  &kp GRAVE  &kp INT_YEN        &kp TILDE    &trans      &kp ASTERISK  &kp MINUS       &trans    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL
&kp COLON        &kp SEMICOLON  &kp SQT    &kp DOUBLE_QUOTES  &trans       &trans      &kp SLASH     &kp UNDERSCORE  &trans    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans           &trans         &trans     &trans             &trans       &trans      &trans        &trans                                                                 &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                            &kp PLUS   &kp N7  &kp N8  &kp N9  &kp N0
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &kp ASTERISK  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans      &kp SLASH     &trans     &kp N1  &kp N2  &kp N3  &trans
&trans   &trans   &trans   &trans   &trans   &trans      &trans        &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_MINUS) LG(KP_PLUS)>;
        };

        adobesortcut {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &kp RG(MINUS)         &kp RG(PLUS)           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans                &mkp MB2               &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                         &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
